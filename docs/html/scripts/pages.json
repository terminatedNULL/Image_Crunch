[{"name":"SQUARE","description":"utils.NodeGeneratorType.SQUARE","location":"-image_-crunch/utils/-node-generator-type/-s-q-u-a-r-e/index.html","searchKeys":["SQUARE","SQUARE","utils.NodeGeneratorType.SQUARE"]},{"name":"class Mask(size: Dimension)","description":"utils.Mask","location":"-image_-crunch/utils/-mask/index.html","searchKeys":["Mask","class Mask(size: Dimension)","utils.Mask"]},{"name":"constructor(size: Dimension)","description":"utils.Mask.Mask","location":"-image_-crunch/utils/-mask/-mask.html","searchKeys":["Mask","constructor(size: Dimension)","utils.Mask.Mask"]},{"name":"enum NodeGeneratorType : Enum<NodeGeneratorType> ","description":"utils.NodeGeneratorType","location":"-image_-crunch/utils/-node-generator-type/index.html","searchKeys":["NodeGeneratorType","enum NodeGeneratorType : Enum<NodeGeneratorType> ","utils.NodeGeneratorType"]},{"name":"fun App()","description":"ui.App","location":"-image_-crunch/ui/-app.html","searchKeys":["App","fun App()","ui.App"]},{"name":"fun AppTheme(content: () -> Unit)","description":"utils.AppTheme","location":"-image_-crunch/utils/-app-theme.html","searchKeys":["AppTheme","fun AppTheme(content: () -> Unit)","utils.AppTheme"]},{"name":"fun CSVtoSettings()","description":"utils.CSVtoSettings","location":"-image_-crunch/utils/-c-s-vto-settings.html","searchKeys":["CSVtoSettings","fun CSVtoSettings()","utils.CSVtoSettings"]},{"name":"fun ImageFileSelection(): File?","description":"utils.ImageFileSelection","location":"-image_-crunch/utils/-image-file-selection.html","searchKeys":["ImageFileSelection","fun ImageFileSelection(): File?","utils.ImageFileSelection"]},{"name":"fun bufferedImageToOutputStream(input: BufferedImage): ByteArrayInputStream","description":"utils.bufferedImageToOutputStream","location":"-image_-crunch/utils/buffered-image-to-output-stream.html","searchKeys":["bufferedImageToOutputStream","fun bufferedImageToOutputStream(input: BufferedImage): ByteArrayInputStream","utils.bufferedImageToOutputStream"]},{"name":"fun buttonRow(rowOffset: Dp, buttonOffset: Dp, width: Dp, buttonEvent: () -> Unit, buttonText: String, themeColor: List<Color>, buttonColor: Int, textColor: Int)","description":"ui.buttonRow","location":"-image_-crunch/ui/button-row.html","searchKeys":["buttonRow","fun buttonRow(rowOffset: Dp, buttonOffset: Dp, width: Dp, buttonEvent: () -> Unit, buttonText: String, themeColor: List<Color>, buttonColor: Int, textColor: Int)","ui.buttonRow"]},{"name":"fun createCard(xOffset: Dp, yOffset: Dp, width: Dp, height: Dp, elevation: Dp, themeColor: List<Color>, cardColor: Int, cardContent: () -> Unit)","description":"ui.createCard","location":"-image_-crunch/ui/create-card.html","searchKeys":["createCard","fun createCard(xOffset: Dp, yOffset: Dp, width: Dp, height: Dp, elevation: Dp, themeColor: List<Color>, cardColor: Int, cardContent: () -> Unit)","ui.createCard"]},{"name":"fun createMenu(menuOffset: Dp, titleOffset: Dp, mainOffset: Dp, returnOffset: Dp, menuWidth: Dp, mainHeight: Dp, elevation: Dp, menuTitle: String, returnTitle: String, themeColor: List<Color>, cardColor: Int, buttonColor: Int, titleColor: Int, textColor: Int, exitOperation: () -> Unit, menuPages: () -> Unit)","description":"ui.createMenu","location":"-image_-crunch/ui/create-menu.html","searchKeys":["createMenu","fun createMenu(menuOffset: Dp, titleOffset: Dp, mainOffset: Dp, returnOffset: Dp, menuWidth: Dp, mainHeight: Dp, elevation: Dp, menuTitle: String, returnTitle: String, themeColor: List<Color>, cardColor: Int, buttonColor: Int, titleColor: Int, textColor: Int, exitOperation: () -> Unit, menuPages: () -> Unit)","ui.createMenu"]},{"name":"fun createNodeMask(input: BufferedImage, nodes: ArrayList<PositionNode>, nodeColor: Color = Color.BLUE, nodeSize: Int = 20): BufferedImage","description":"utils.createNodeMask","location":"-image_-crunch/utils/create-node-mask.html","searchKeys":["createNodeMask","fun createNodeMask(input: BufferedImage, nodes: ArrayList<PositionNode>, nodeColor: Color = Color.BLUE, nodeSize: Int = 20): BufferedImage","utils.createNodeMask"]},{"name":"fun fileToBufferedImage(input: File?): BufferedImage","description":"utils.fileToBufferedImage","location":"-image_-crunch/utils/file-to-buffered-image.html","searchKeys":["fileToBufferedImage","fun fileToBufferedImage(input: File?): BufferedImage","utils.fileToBufferedImage"]},{"name":"fun generateNodes(genType: NodeGeneratorType): ArrayList<PositionNode>","description":"utils.generateNodes","location":"-image_-crunch/utils/generate-nodes.html","searchKeys":["generateNodes","fun generateNodes(genType: NodeGeneratorType): ArrayList<PositionNode>","utils.generateNodes"]},{"name":"fun getDim(bufferedImage: BufferedImage): Dimension","description":"utils.getDim","location":"-image_-crunch/utils/get-dim.html","searchKeys":["getDim","fun getDim(bufferedImage: BufferedImage): Dimension","utils.getDim"]},{"name":"fun horizontalVisibilityPane(visibility: Boolean, animationWidth: Int, duration: Int, paneContent: AnimatedVisibilityScope.() -> Unit)","description":"ui.horizontalVisibilityPane","location":"-image_-crunch/ui/horizontal-visibility-pane.html","searchKeys":["horizontalVisibilityPane","fun horizontalVisibilityPane(visibility: Boolean, animationWidth: Int, duration: Int, paneContent: AnimatedVisibilityScope.() -> Unit)","ui.horizontalVisibilityPane"]},{"name":"fun main()","description":"main","location":"-image_-crunch/[root]/main.html","searchKeys":["main","fun main()","main"]},{"name":"fun maskToImage(input: BufferedImage, mask: Mask, name: String)","description":"utils.maskToImage","location":"-image_-crunch/utils/mask-to-image.html","searchKeys":["maskToImage","fun maskToImage(input: BufferedImage, mask: Mask, name: String)","utils.maskToImage"]},{"name":"fun settingsToCSV()","description":"utils.settingsToCSV","location":"-image_-crunch/utils/settings-to-c-s-v.html","searchKeys":["settingsToCSV","fun settingsToCSV()","utils.settingsToCSV"]},{"name":"fun settingsToString(): String","description":"utils.settingsToString","location":"-image_-crunch/utils/settings-to-string.html","searchKeys":["settingsToString","fun settingsToString(): String","utils.settingsToString"]},{"name":"fun squareCutGenerator(nodes: ArrayList<PositionNode>, rows: Int, columns: Int): Mask","description":"utils.squareCutGenerator","location":"-image_-crunch/utils/square-cut-generator.html","searchKeys":["squareCutGenerator","fun squareCutGenerator(nodes: ArrayList<PositionNode>, rows: Int, columns: Int): Mask","utils.squareCutGenerator"]},{"name":"fun squareMaskGenerator(cutImage: ImageMask, nodes: ArrayList<PositionNode>): ArrayList<Mask>","description":"utils.squareMaskGenerator","location":"-image_-crunch/utils/square-mask-generator.html","searchKeys":["squareMaskGenerator","fun squareMaskGenerator(cutImage: ImageMask, nodes: ArrayList<PositionNode>): ArrayList<Mask>","utils.squareMaskGenerator"]},{"name":"fun squareNodeGenerator(rows: Int, columns: Int, imageSize: Dimension): ArrayList<PositionNode>","description":"utils.squareNodeGenerator","location":"-image_-crunch/utils/square-node-generator.html","searchKeys":["squareNodeGenerator","fun squareNodeGenerator(rows: Int, columns: Int, imageSize: Dimension): ArrayList<PositionNode>","utils.squareNodeGenerator"]},{"name":"fun stringToSettings()","description":"utils.stringToSettings","location":"-image_-crunch/utils/string-to-settings.html","searchKeys":["stringToSettings","fun stringToSettings()","utils.stringToSettings"]},{"name":"fun textRow(rowOffset: Dp, displayedText: String, textOffset: Dp, fontSize: TextUnit, font: FontWeight, themeColor: List<Color>, textColor: Int)","description":"ui.textRow","location":"-image_-crunch/ui/text-row.html","searchKeys":["textRow","fun textRow(rowOffset: Dp, displayedText: String, textOffset: Dp, fontSize: TextUnit, font: FontWeight, themeColor: List<Color>, textColor: Int)","ui.textRow"]},{"name":"fun valueOf(value: String): NodeGeneratorType","description":"utils.NodeGeneratorType.valueOf","location":"-image_-crunch/utils/-node-generator-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): NodeGeneratorType","utils.NodeGeneratorType.valueOf"]},{"name":"fun values(): Array<NodeGeneratorType>","description":"utils.NodeGeneratorType.values","location":"-image_-crunch/utils/-node-generator-type/values.html","searchKeys":["values","fun values(): Array<NodeGeneratorType>","utils.NodeGeneratorType.values"]},{"name":"fun verticalVisibilityPane(visibility: Boolean, animationHeight: Int, duration: Int, paneContent: AnimatedVisibilityScope.() -> Unit)","description":"ui.verticalVisibilityPane","location":"-image_-crunch/ui/vertical-visibility-pane.html","searchKeys":["verticalVisibilityPane","fun verticalVisibilityPane(visibility: Boolean, animationHeight: Int, duration: Int, paneContent: AnimatedVisibilityScope.() -> Unit)","ui.verticalVisibilityPane"]},{"name":"object AppFont","description":"utils.AppFont","location":"-image_-crunch/utils/-app-font/index.html","searchKeys":["AppFont","object AppFont","utils.AppFont"]},{"name":"typealias ImageMask = Array<ByteArray>","description":"utils.ImageMask","location":"-image_-crunch/utils/-image-mask/index.html","searchKeys":["ImageMask","typealias ImageMask = Array<ByteArray>","utils.ImageMask"]},{"name":"typealias PositionNode = Pair<Int, Int>","description":"utils.PositionNode","location":"-image_-crunch/utils/-position-node/index.html","searchKeys":["PositionNode","typealias PositionNode = Pair<Int, Int>","utils.PositionNode"]},{"name":"val Metropolis: FontFamily","description":"utils.AppFont.Metropolis","location":"-image_-crunch/utils/-app-font/-metropolis.html","searchKeys":["Metropolis","val Metropolis: FontFamily","utils.AppFont.Metropolis"]},{"name":"val appTypography: Typography","description":"utils.appTypography","location":"-image_-crunch/utils/app-typography.html","searchKeys":["appTypography","val appTypography: Typography","utils.appTypography"]},{"name":"val aqueousThemes: List<Color>","description":"utils.aqueousThemes","location":"-image_-crunch/utils/aqueous-themes.html","searchKeys":["aqueousThemes","val aqueousThemes: List<Color>","utils.aqueousThemes"]},{"name":"val celesteThemes: List<Color>","description":"utils.celesteThemes","location":"-image_-crunch/utils/celeste-themes.html","searchKeys":["celesteThemes","val celesteThemes: List<Color>","utils.celesteThemes"]},{"name":"val darkThemes: List<Color>","description":"utils.darkThemes","location":"-image_-crunch/utils/dark-themes.html","searchKeys":["darkThemes","val darkThemes: List<Color>","utils.darkThemes"]},{"name":"val entries: EnumEntries<NodeGeneratorType>","description":"utils.NodeGeneratorType.entries","location":"-image_-crunch/utils/-node-generator-type/entries.html","searchKeys":["entries","val entries: EnumEntries<NodeGeneratorType>","utils.NodeGeneratorType.entries"]},{"name":"val generatorTypeMap: Map<String, Int>","description":"utils.generatorTypeMap","location":"-image_-crunch/utils/generator-type-map.html","searchKeys":["generatorTypeMap","val generatorTypeMap: Map<String, Int>","utils.generatorTypeMap"]},{"name":"val lightThemes: List<Color>","description":"utils.lightThemes","location":"-image_-crunch/utils/light-themes.html","searchKeys":["lightThemes","val lightThemes: List<Color>","utils.lightThemes"]},{"name":"val size: Dimension","description":"utils.Mask.size","location":"-image_-crunch/utils/-mask/size.html","searchKeys":["size","val size: Dimension","utils.Mask.size"]},{"name":"val themeTypeMap: Map<List<Color>, Int>","description":"utils.themeTypeMap","location":"-image_-crunch/utils/theme-type-map.html","searchKeys":["themeTypeMap","val themeTypeMap: Map<List<Color>, Int>","utils.themeTypeMap"]},{"name":"var bits: Array<ByteArray>","description":"utils.Mask.bits","location":"-image_-crunch/utils/-mask/bits.html","searchKeys":["bits","var bits: Array<ByteArray>","utils.Mask.bits"]},{"name":"var compactExport: Boolean","description":"utils.compactExport","location":"-image_-crunch/utils/compact-export.html","searchKeys":["compactExport","var compactExport: Boolean","utils.compactExport"]},{"name":"var generatorType: Int","description":"utils.generatorType","location":"-image_-crunch/utils/generator-type.html","searchKeys":["generatorType","var generatorType: Int","utils.generatorType"]},{"name":"var loadedImageSize: Dimension","description":"utils.loadedImageSize","location":"-image_-crunch/utils/loaded-image-size.html","searchKeys":["loadedImageSize","var loadedImageSize: Dimension","utils.loadedImageSize"]},{"name":"var overlayImage: BufferedImage?","description":"utils.overlayImage","location":"-image_-crunch/utils/overlay-image.html","searchKeys":["overlayImage","var overlayImage: BufferedImage?","utils.overlayImage"]},{"name":"var position: PositionNode","description":"utils.Mask.position","location":"-image_-crunch/utils/-mask/position.html","searchKeys":["position","var position: PositionNode","utils.Mask.position"]},{"name":"var selectedImage: BufferedImage?","description":"utils.selectedImage","location":"-image_-crunch/utils/selected-image.html","searchKeys":["selectedImage","var selectedImage: BufferedImage?","utils.selectedImage"]},{"name":"var squareColumns: Int","description":"utils.squareColumns","location":"-image_-crunch/utils/square-columns.html","searchKeys":["squareColumns","var squareColumns: Int","utils.squareColumns"]},{"name":"var squareRows: Int","description":"utils.squareRows","location":"-image_-crunch/utils/square-rows.html","searchKeys":["squareRows","var squareRows: Int","utils.squareRows"]}]
